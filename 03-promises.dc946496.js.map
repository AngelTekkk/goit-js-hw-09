{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SACAD,EAAAE,OAAOC,KAAK,CAAEC,cAAc,IA6B5B,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,MAEpBA,MApCMQ,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBAEN,MACEC,UAAYb,MAAAc,EAAKC,KAAEA,EAAIC,OAAEA,IACvBL,EAAMM,cAEV,IAAIC,EAAeC,OAAOL,EAAMM,OAC5BC,EAAcF,OAAOJ,EAAKK,OAC9B,MAAME,EAAgBH,OAAOH,EAAOI,OAEpC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAeC,GAAK,EACvCzB,EAAcyB,EAAGL,GACdM,MAAK,EAACzB,SAAEA,EAAQC,MAAEA,MACjBP,EAAAE,OAAO8B,QAAQ,uBAAqB1B,QAAiBC,UAEtD0B,OAAM,EAAC3B,SAAEA,EAAQC,MAAEA,MAClBP,EAAAE,OAAOgC,QAAQ,sBAAoB5B,QAAeC,UAEtDkB,GAAgBG","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from \"notiflix/build/notiflix-notify-aio\";\nNotify.init({ clickToClose: true });\n\nconst form = document.querySelector(\".form\");\n\nform.addEventListener(\"submit\", onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n\n  const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n\n  let promiseDelay = Number(delay.value);\n  let promiseStep = Number(step.value);\n  const promiseAmount = Number(amount.value);\n\n  for (let i = 1; i <= promiseAmount; i += 1) {\n    createPromise(i, promiseDelay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    promiseDelay += promiseStep;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","Notify","init","clickToClose","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","event","preventDefault","elements","delay1","step","amount","currentTarget","promiseDelay","Number","value","promiseStep","promiseAmount","i","then","success","catch","failure"],"version":3,"file":"03-promises.dc946496.js.map"}